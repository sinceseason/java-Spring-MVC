package com.xty.platform.dao;import com.xty.domain.FuzzyCondition;import com.xty.platModel.basic.User;import com.xty.result.ResultData;import org.springframework.stereotype.Repository;import java.util.ArrayList;import java.util.List;/** * Created by Eugen on 2015/8/18. */@Repositorypublic class UserDao extends BaseDao<User, Integer> {    public ResultData fuzzy(User loginedUser, FuzzyCondition fuzzyCondition) {        ResultData resultData = new ResultData();        try {            String sql = "SELECT * FROM user u";            if (fuzzyCondition.getFuzzy() != null && fuzzyCondition.getFuzzy().trim().length() > 0) {                sql += "AND ( u.username LIKE '%" + fuzzyCondition.getFuzzy() + "%' "                        + "OR  u.fullname LIKE '%" + fuzzyCondition.getFuzzy() + "%' )";            }//            sql += "AND type =" + loginedUser.getType();            sql += " ORDER BY u.id";            int page = fuzzyCondition.getPage() == null ? 0 : fuzzyCondition.getPage();            int limit = fuzzyCondition.getLimit() == null ? 0 : fuzzyCondition.getLimit();            List<User> list = findBySql(page, limit, sql, User.class);            resultData.setData(list);            sql = sql.replace(" * ", "count(*)");            Integer total = getTotalCountBySql(sql);            resultData.setTotalCount(total);        } catch (Exception ex) {            ex.printStackTrace();            logger.error(ex);        }        return resultData;    }    /**     * 系统登录     *     * @param user User     * @return User     */    public User login(User user) {        try {            String hql = "FROM User WHERE username = '" + user.getUsername()                    + "' AND password = '" + user.getPassword() + "' AND type = '" + user.getType() + "'";            List<User> list = find(hql);            if (list.size() > 0)                return list.get(0);            else {                logger.error("system user profile was not found");            }        } catch (Exception ex) {            ex.printStackTrace();            logger.error(ex);        }        return null;    }    /**     * 修改密码     *     * @param user User     * @return boolean     */    public boolean changePassword(User user) {        try {            String sql = "UPDATE user SET password = '" + user.getPassword() + "' WHERE id = '" + user.getId() + "'";            return excuteSql(sql);        } catch (Exception ex) {            ex.printStackTrace();            logger.error(ex);        }        return false;    }    public boolean checkUsername(String username){        try{            String hql = "FROM User WHERE username = '" + username + "'";            return getTotalCount(hql) > 0;        }catch (Exception ex){            ex.printStackTrace();            logger.error(ex);        }        return false;    }    /**     * 查询系统用户     *     * @param username String     * @return User     */    public User queryByName(String username) {        try {            String hql = "FROM User where username = '" + username + "'";            List<User> list = find(hql);            if (list.size() > 0)                return list.get(0);        } catch (Exception ex) {            ex.printStackTrace();            logger.error(ex);        }        return null;    }}